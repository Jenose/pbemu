using Common.Utilities;
using LoginServer.Database;
using LoginServer.Model;
using LoginServer.Network.Send;

namespace LoginServer.Network.Recv
{
    public class RpAuth : ARecvPacket
    {
        protected string Login;

        protected string Passwd;

        protected internal override void Read()
        {
            Log.Debug("Unk1 = {0}", ReadH());

            Login = ReadS(ReadC());
            Log.Debug("Login = {0}", Login);

            Passwd = ReadS(ReadH());
            Log.Debug("Passwd = {0}", Passwd);

            Log.Debug("Unk2 = {0}", ReadH());
            Log.Debug("Unk3 = {0}", ReadH());
            Log.Debug("Unk4 = {0}", ReadC());
            Log.Debug("Unk5 = {0}", ReadH());
            Log.Debug("Unk6 = {0}", ReadB(16).FormatHex());
            Log.Debug("Unk7 = {0}", (char)ReadC());
            Log.Debug("Unk8 = {0}", ReadS(ReadC()));
            Log.Debug("Unk9 = {0}", ReadB(15).FormatHex());
            Log.Debug("Unk10 = {0}", ReadC());
        }

        protected internal override void Run()
        {
            if(Config.Config.Misc_AutoAccount)
            {
                var acc = new Account()
                {
                    Login = Login,
                    Password = Passwd,
                    Cash = 0,
                    LastIpAddress = _Client._account.LastIpAddress
                };
                _Client._account = acc;
                AccountMDB.GetInstance().CreateAccounnt(acc);
            }

            var account = AccountMDB.GetInstance().GetAccountByLogin(Login); //AccountDatabase.GetInstance().GetAccountByToken(Token);

            if (account != null)
            {
                _Client.SendPacket(new SpAccountAuth(account));
                _Client.Send("0c002102000000000000000000000000".ToBytes());
                //_Client.Send("02802850db30".ToBytes());
                //_Client.Send("0b06060a00000000154d617374696b530000000000000000000000000000000000000000000000000000489700000600000000000000481d0000000000000000000000000000000000000000000000000000d3b9d2b9abcda7004e5f4c696e6500000000ffffffff0000000000003419000050690f00c60000004b0000007a00000001000000f70600006601000039090000c6000000f706000032000000af000000400000006e00000001000000f30500003b01000022080000af000000f30500001f0000002d10aa3b1614aa3b393baf41000000006163f63bbdecf5051390d22369afd72919eadc2f5a0de23500000000000000000000000000000000000000000000000000000000000000000000000000000000d201060000000d000000020000000000000000000000000000002d10aa3b030100000000000000000000001614aa3b03010000000000000000000000393baf41030100000000000000000000006163f63b030100000000000000000000006263f63b030100000000000000000000006363f63b03010000005a021b0300000000bdecf5050162000000198c270300000000c9ecf50501803a09001a8c270300000000cdecf50501803a09001b8c27030000000092b6e11101803a0900931b280300000000f2d1eb0b0180510100fb5d280300000000f3d1eb0b01805101000000000000000000bcecf50503010000000000000000000000a6d1eb0b030100000000000000000000008bb6e111030100000000000000000000001390d2230301000000000000000000000069afd7290301000000000000000000000019eadc2f030100000000000000000000005a0de2350301000000f96adf050000000048fb8c4d010a000000006bdf0500000000b9f57c4d010100000000060000000c0000000ebe0000000000000005070002000000000000000b00000019000000230000000b00000027000000010000002800000001000000010000000000000000000000000000004f03fe1ff4fecfc707b01700000000008d008c018c01840184018401840185018d018c0184010001000100014001000100018c014001880184018001840100008400800080008000800084008000800080008000800000000000800080008000000000000000000000008401800088010000840100000000000000000000800000000000000088008400000084008c00840180010000840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000001ee01000000000000000000000014000000000000000000000000000000000000000000000000000000000000bdaca45331302e3132302e312e34340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000951f00000100000100".ToBytes());
            }
            else
                Log.Warn("Account Doesn't exists...");
        }
    }
}
